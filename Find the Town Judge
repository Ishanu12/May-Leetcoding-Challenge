class Solution
{
    public:
    int findJudge(int N, vector<vector<int>>& trust)
    {
        vector<int> trust_count(N, 0);
        vector<bool> valid(N, true);
        int c = 0, x = -1;
        for (const auto &n: trust) 
        {
            trust_count[n[1] - 1] ++;   
            if (trust_count[n[1] - 1] == N - 1) 
            { // receive N-1 incoming edges
                c ++;
                x = n[1];
                if (c >= 2) return -1; // more than 1 satisfied, thus no judges
            }
            valid[n[0] - 1] = false; // the judge trusts nobody
        }
        if (c == 0) return N == 1 ? 1 : -1; // corner case
        if (valid[x - 1]) return x; // c = 1, also judge trusts nobody.
        return -1;
    }
};
